@page "/inspect-department/{Id}"

@using System.ComponentModel
@using Blorc.Components
@using Blorc.PatternFly.Components.Button
@using Blorc.PatternFly.Components.Breadcrumb
@using Blorc.PatternFly.Components.Spinner
@using Blorc.PatternFly.Components.EmptyState
@using Blorc.PatternFly.Components.Label
@using Blorc.PatternFly.Components.Table
@using Blorc.PatternFly.Components.Text
@using Blorc.PatternFly.Components.TextInput
@using Blorc.PatternFly.Components.Title
@using Blorc.PatternFly.Layouts.Split
@using Blorc.PatternFly.Layouts.Stack
@using Blorc.PatternFly.Core
@using YourShipping.Monitor.Shared

@inherits IspectDepartmentComponent

@if (Department != null)
{
    <Breadcrumb>
        <BreadcrumbItem To="/departments-monitor">Departments</BreadcrumbItem>
        <BreadcrumbItem IsActive="true">
            @Department.Name from @Department.Store
        </BreadcrumbItem>
    </Breadcrumb>
    <br/>
    <br/>
    <TextContent>
        <Text Component="h1">Products of Department @Department.Name from @Department.Store</Text>
        <Text Component="blockquote">View the existing products of an specific department</Text>
    </TextContent>
    <br />
    <Stack IsGutter="true">
        <StackItem>
            <Table Caption="Products" IsStickyHeader="true" DataSource=@Products HighlightPredicate=@(o=>IsHighlighted(o as Product))>
                <Header>
                    <Row>
                        <Column Label="Name" Key="Name" IsSortable="true" Idx="0" />
                        <Column Label="Price" Key="Price" IsSortable="true" Idx="1" />
                        <Column Label="Currency" Key="Currency" IsSortable="true" Idx="2" />
                        <ActionColumn ActionColumnType=@ActionColumnType.ButtonAndToggle Label="Actions" Key="Actions" Align="@Align.Center" Idx="6" ActionSource=@(record => GetActions(record)) />
                    </Row>
                </Header>
                <NoRowsContent>
                    @if (IsLoading)
                    {
                        <EmptyState Variant="EmptyStateVariant.Full">
                            <Spinner IsVisible="true" Size="@SpinnerSize.XLarge" />
                            <Title HeadingLevel="h5" Size="lg">
                                Loading
                            </Title>
                        </EmptyState>
                    }
                    else
                    {
                        <EmptyState Variant="EmptyStateVariant.Full">
                            <EmptyStateIcon Icon="Search" />
                            <Title HeadingLevel="h2" Size="lg">
                                No data
                            </Title>
                        </EmptyState>
                    }
                </NoRowsContent>
            </Table>
        </StackItem>
        <StackItem><Button Variant=@ButtonVariant.Secondary OnClick=@(async (s, a) => await RefreshAsync(true)) isBlock>Refresh</Button></StackItem>
    </Stack>
}





